{"version":3,"sources":["components/Header.js","components/Form.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Form","input","setInput","todos","setTodos","editTodo","setEditTodo","useEffect","title","onSubmit","event","preventDefault","id","completed","newTodo","map","todo","updateTodo","uuidv4","type","placeholder","value","required","onChange","target","TodoList","onClick","item","handleComplete","findTodo","find","handleEdit","filter","handleDelete","App","initialState","JSON","parse","localStorage","getItem","useState","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9037b64f.chunk.js","sourcesContent":["import React from \"react\";\r\n//  Simple Hearder component\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>ToDo List</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useEffect } from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nconst Form = ({input, setInput, todos, setTodos, editTodo, setEditTodo}) => {\r\n    // Helper functio to edit item, save new info\r\n    const updateTodo = (title, id, completed) => {\r\n        const newTodo = todos.map((todo) => \r\n            todo.id === id ? {title, id, completed} : todo\r\n        );\r\n        setTodos(newTodo);\r\n        setEditTodo(\"\");\r\n    };\r\n    // Utilized useEffect to grab the title of the item for editing\r\n    useEffect(() => {\r\n        if (editTodo) {\r\n            setInput(editTodo.title);\r\n        } else {\r\n            setInput(\"\");\r\n        }\r\n    }, [setInput, editTodo]);\r\n\r\n    const onInputChange = (event) => {\r\n        setInput(event.target.value);\r\n    };\r\n    // Pass information to state to add to list, take into consideration \"edit\" operation\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(!editTodo){\r\n            setTodos([...todos, {id: uuidv4(), title: input, completed: false}]);      \r\n        setInput(\"\");\r\n        } else {\r\n           updateTodo(input, editTodo.id, editTodo.completed) \r\n        }\r\n    };\r\n    return (\r\n        <form onSubmit={onFormSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"What is your next task?\" \r\n                className=\"task-input\" \r\n                value={input}\r\n                required \r\n                onChange = {onInputChange}\r\n            />\r\n            <button className=\"button-add\" type=\"submit\">\r\n                {editTodo ? \"OK\" : \"Add\"}\r\n            </button>\r\n        </form>\r\n    );\r\n    \r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst TodoList = ({todos, setTodos, setEditTodo}) => {\r\n    \r\n    // Mark item as \"Completed\"\r\n    const handleComplete = (todo) => {\r\n        setTodos(\r\n            todos.map((item) => {\r\n                if (item.id === todo.id) {\r\n                    return {...item, completed: !item.completed};\r\n                }\r\n                return item;\r\n            })\r\n        )\r\n    }; \r\n    \r\n    // Delete item by deatatching the id number\r\n    const handleDelete = ({ id }) => {\r\n        setTodos(todos.filter((todo) => todo.id !== id));\r\n    };\r\n\r\n    // Edit item helper function\r\n    const handleEdit = ({ id }) => {\r\n        const findTodo = todos.find((todo) => todo.id === id);\r\n        setEditTodo(findTodo);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {todos.map((todo) => (\r\n                <li className=\"list-item\" key={todo.id} >\r\n                    <input \r\n                        type=\"text\" \r\n                        value={todo.title} \r\n                        className={`list ${todo.completed ? \"complete\" : \"\"}`}\r\n                        onChange={(event) => event.preventDefault()} \r\n                    />\r\n                    <div>\r\n                        <button className=\"button-complete task-button\" onClick={() => handleComplete(todo)}>\r\n                            <i className=\"fa fa-check-circle\"></i>\r\n                        </button>     \r\n                        <button className=\"button-edit task-button\" onClick={() => handleEdit(todo)}>\r\n                            <i className=\"fa fa-edit\"></i>\r\n                        </button> \r\n                        <button className=\"button-delete task-button\">\r\n                            <i className=\"fa fa-trash\" onClick={() => handleDelete(todo)}></i>\r\n                        </button>                    \r\n                    </div>\r\n                </li>\r\n            )\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, {useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport './App.css';\n\nfunction App() {\n  //  set initial state\n  const initialState = JSON.parse(localStorage.getItem(\"todos\")) || [];\n  const [input, setInput] = useState(\"\");\n  const [todos, setTodos] = useState(initialState);\n  const [editTodo, setEditTodo] = useState(null);\n\n  // Pass data to localStorage for future use\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n  return (\n      <div className=\"container\">\n        <div className=\"app-wrapper\">\n          <div>\n            <Header />\n          </div>\n          <div>\n            <Form \n              input = {input}\n              setInput = {setInput}\n              todos = {todos}\n              setTodos = {setTodos}  \n              editTodo = {editTodo}\n              setEditTodo={setEditTodo}  \n            />                     \n          </div>\n          <div>\n            <TodoList \n              todos={todos} \n              setTodos={setTodos}\n              setEditTodo={setEditTodo} />\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}